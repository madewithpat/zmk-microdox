/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE 0
#define NAV 1
#define SYM 2
#define NUM 3
#define FUN 4
#define ADJ 5
#define LOK 6
#define ULK 7

#define WINR LC(LG(RIGHT))
#define WINL LC(LG(LEFT))
#define CC LC(C)
#define CX LC(X)
#define CP LC(V)
#define PT LC(LS(TAB))
#define NT LC(TAB)

/ {
    conditional_layers {        
        compatible = "zmk,conditional-layers";        
        
        tri_layer {            
                if-layers = <3 4>;            
                then-layer = <5>;        
        };    
    };

    behaviors {
        hm: homerow_mod {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MOD";
            #binding-cells = <2>;
            tapping_term_ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        hmb: homerow_mod_b {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MOD";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            quick_tap_ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };

        th: tap_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_HOLD";
            #binding-cells = <2>;
            tapping_term_ms = <150>;
            flavor = "hold-preferred";
            bindings = <&kp>, <&kp>;
        };

        hlt: hold_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_LAYER_TAP";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "hold-preferred";
            bindings = <&mo>, <&kp>;
        };

        qlt: quick_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_LAYER_TAP";
            #binding-cells = <2>;
            tapping_term_ms = <150>;
            quick_tap_ms = <50>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
            retro-tap;
        };
    };

    keymap {
            compatible = "zmk,keymap";

            default_layer {

// Base Layer: Colemak
//
// ,----------------------------------.        ,----------------------------------.
// |   Q  |   W  |   F  |   P  |   B  |        |   J  |   L  |   U  |   Y  | '  " |
// |      |      |      |      |      |        |      |      |      |      |      |
// |------+------+------+------+------|        |------+------+------+------+------|
// |   A  |   R  |   S  |   T  |   G  |        |   M  |   N  |   E  |   I  |   O  |
// |  GUI |  ALT | SHFT | CTRL |      |        |      | CTRL | SHFT |  ALT |  GUI |
// |------+------+------+------+------|        |------+------+------+------+------|
// |   Z  |   X  |   C  |   D  |   V  |        |   K  |   H  | ,  < | .  > | /  ? |
// | SHFT |      |      |      |      |        |      |      |      |      | SHFT |
// `------+------+------+------+------|        |------+------+------+------+------'
//               | ESC  | TAB  | SPC  |        | BSP  | RET  | DEL  |
//               |      | FUNC | NAV  |        | SYM  | NUM  |      |
//               `--------------------'        `--------------------'
//

                bindings = <
    &kp Q         &kp W       &kp F         &kp P         &kp B                     &kp J    &kp L          &kp U          &kp Y       &kp SQT
    &hmb LGUI A   &hmb LALT R &hm LSHIFT S  &hm LCTRL T   &kp G                     &kp M    &hm RCTRL N    &hm RSHIFT E   &hmb LALT I  &hmb RGUI O
    &hm LSHIFT Z  &kp X       &kp C         &kp D         &kp V                     &kp K    &kp H          &kp COMMA      &kp DOT     &hm RSHIFT FSLH
                              &kp ESC       &lt FUN TAB   &lt NAV SPACE       &lt SYM BSPC   &lt NUM RET    &kp DEL
                >;
            };
                
            nav_layer {

// Navigation Layer
//		- Also contains some single-hand shortcuts for basic functions 
//
// ,----------------------------------.        ,----------------------------------.
// | ESC  |      | PAST | COPY | CUT  |        | PGUP | HOME |  UP  | END  | BSPC |
// |      |      |      |      |      |        |      |      |      |      |      |
// |------+------+------+------+------|        |------+------+------+------+------|
// |      |      |      |      | RET  |        | PGDN | LEFT | DOWN | RGHT | RET  |
// | GUI  | ALT  | SHFT | CTRL |      |        |      |      |      |      |      |
// |------+------+------+------+------|        |------+------+------+------+------|
// |      |      |      |      |      |        |      | <-D  |      | D->  | DEL  |
// |      |      |      |      |      |        |      |      |      |      |      |
// `-------------+------+------+------|        |------+------+------+-------------'
//               |      |      |      |        |      |      |      |
//               |      |      |      |        |      |      |      |
//               `--------------------'        `--------------------'
//
                bindings = <
   &kp ESC  &none     &kp LC(V)  &kp LC(C)   &kp LC(X)  &kp PG_UP &kp HOME &kp UP   &kp END   &kp BSPC
   &kp LGUI &kp LALT  &kp LSHIFT &kp LCTRL   &kp RET    &kp PG_DN &kp LEFT &kp DOWN &kp RIGHT &kp RET
   &none    &none     &kp PT     &kp NT      &none      &kp BSLH  &kp WINL &none    &kp WINR  &kp DEL
                      &trans     &trans      &trans     &trans    &trans   &trans
                >;
            };

            sym_layer {

// Symbol Layer
//		- Lots of WIP here
//		- But the Frey seems like the easiest to start with
//		- Then I sort of filled in gaps, planning on a 5 column layout
//
// ,----------------------------------.        ,----------------------------------.
// |  !   |  @   |  #   |  $   |  %   |        |  ^   |  &   |  *   |  |   |  ?   |
// |      |      |      |      |      |        |      |      |      |      |      |
// |------+------+------+------+------|        |------+------+------+------+------|
// | `  ~ |  {   |  (   |  )   |  }   |        |      | =  + | -  _ |  :   | ;  : |
// | GUI  | ALT  | SHFT | CTRL |      |        |      | CTRL | SHFT | ALT  | GUI  |
// |------+------+------+------+------|        |------+------+------+------+------|
// |  ~   |  <   |  [   |  ]   |  >   |        |      |  +   |  _   |  \   |  /   |
// |      |      |      |      |      |        |      |      |      |      |      |
// `-------------+------+------+------|        |------+------+------+-------------'
//               |      |      |      |        |      |      |      |
//               |      |      |      |        |      |      |      |
//               `--------------------'        `--------------------'
//
                bindings = <
   &kp EXCL         &kp AT           &kp HASH          &kp DLLR         &kp PRCNT       &kp CARET   &kp AMPS          &kp ASTRK          &kp PIPE         &kp QMARK
   &hm LGUI GRAVE   &hm LALT LBRC    &hm LSHIFT LPAR   &hm LCTRL RPAR   &kp RBRC        &none       &hm RCTRL EQUAL   &hm RSHIFT MINUS   &hm LALT COLON   &hm RGUI SEMI
   &kp TILDE        &kp LT           &kp LBKT          &kp RBKT         &kp GT          &none       &kp PLUS          &kp UNDER          &kp BSLH         &kp FSLH
                                     &trans            &trans           &trans          &trans      &trans            &trans                        
                >;
            };

            num_layer {
//
// Number layer
//
// ,----------------------------------.         ,----------------------------------.
// | 1  ! | 2  @ | 3  # | 4  $ | 5  % |         | 6  ^ | 7  & | 8  * | 9  ( | 0  ) |
// |      |      |      |      |      |         |      |      |      |      |      |
// |------+------+------+------+------|         |------+------+------+------+------|
// | 6  ^ | 7  & | 8  * | 9  ( | 0  ) |         |  -   |      |      |      |      |
// |      |      |      |      |      |         |      | CTRL | SHFT | ALT  | GUI  |
// |------+------+------+------+------|         |------+------+------+------+------|
// |      |      |      |      |      |         |  _   |  =   |  .   |  ,   |  /   |
// |      |      |      |      |      |         |      |      |      |      |      |
// `-------------+------+------+------|         |------+------+------+-------------'
//               |      |      |      |         |      |      |      |
//               |      |      |      |         |      |      |      |
//               `--------------------'         `--------------------'
//
                bindings = <
            &kp N1  &kp N2  &kp N3  &kp N4  &kp N5        &kp N6     &kp N7     &kp N8      &kp N9    &kp N0 
            &kp N6  &kp N7  &kp N8  &kp N9  &kp N0        &kp MINUS  &kp RCTRL  &kp RSHIFT  &kp LALT  &kp RGUI
            &none   &none   &none   &none   &none         &kp UNDER  &kp EQUAL  &kp COMMA   &kp DOT   &kp FSLH
                            &trans  &trans  &trans        &kp BSPC   &trans     &trans 
                >;
            };            

            fun_layer {
//
// F-Key Layer
// + Left hand shortcuts
//
// ,----------------------------------.         ,----------------------------------.
// | Brk  |      | Past | Copy | Cut  |         | Ins  |  F11 |  F12 | Prt  | Caps |
// |      |      |      |      |      |         |      |      |      |      |      |
// |------+------+------+------+------|         |------+------+------+------+------|
// |      |      |      |      | Ret  |         |  F1  |  F2  |  F3  |  F4  |  F5  |
// | GUI  | Alt  | Shft | Ctrl |      |         |      |      |      |      |      |
// |------+------+------+------+------|         |------+------+------+------+------|
// |      |      |      |      | Bspc |         |  F6  |  F7  |  F8  |  F9  | F10  |
// |      |      |      |      |      |         |      |      |      |      |      |
// `-------------+------+------+------|         |------+------+------+-------------'
//               |      |      |      |         |      |      |      |
//               |      |      |      |         |      |      |      |
//               `--------------------'         `--------------------'
                bindings = <
    &kp PAUSE_BREAK  &none     &kp LC(V)  &kp LC(C)  &kp LC(X)     &kp INS  &kp F11  &kp F12  &kp PSCRN  &kp CAPS
    &kp LGUI         &kp LALT  &kp LSHIFT &kp LCTRL  &kp RET       &kp F1   &kp F2   &kp F3   &kp F4     &kp F5
    &none            &none     &none      &none      &kp BSPC      &kp F6   &kp F7   &kp F8   &kp F9     &kp F10
                               &trans     &trans     &trans        &trans   &trans   &trans
                >;
            };

            adj_layer {
//
// Layer Template
//
// ,----------------------------------.         ,----------------------------------.
// | boot |      | Bri+ | Vol+ | BCLR |         |      |      | NUML | SCRL | boot |
// |      |      |      |      |      |         |      |      |      |      |      |
// |------+------+------+------+------|         |------+------+------+------+------|
// | rst  |      | Bri- | Vol- |      |         |      | BT 1 | BT 2 | BT 3 | rst  |
// |      |      |      |      |      |         |      |      |      |      |      |
// |------+------+------+------+------|         |------+------+------+------+------|
// | LOCK |      |      | MUTE |      |         |      |      |      |      |      |
// |      |      |      |      |      |         |      |      |      |      |      |
// `-------------+------+------+------|         |------+------+------+-------------'
//               |      |      |      |         |      |      |      |
//               |      |      |      |         |      |      |      |
//               `--------------------'         `--------------------'

                bindings = <
        &bootloader &none &none  &kp K_VOL_UP  &bt BT_CLR       &none  &none  &none &none &bootloader
        &reset      &none &none  &kp K_VOL_DN  &kp C_MUTE       &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2 &reset
        &tog LOK    &none &none  &kp K_MUTE    &kp K_MUTE2      &none  &none  &none &none &none
                          &trans &trans        &trans           &trans &trans &trans 
                >;
            };

            

            lock_layer {

                bindings = <
        &none   &none &none &none &none     &none &none &none &none &none
        &none   &none &none &none &none     &none &none &none &none &none
        &mo ULK &none &none &none &none     &none &none &none &none &none
                      &none &none &mo ULK   &none &none &none 
                >;
            };

            unlock_layer {

                bindings = <
        &none    &none &none &none &none       &none &none &none &none &none
        &none    &none &none &none &none       &none &none &none &none &none
        &tog LOK &none &none &none &none       &none &none &none &none &none
                       &none &none &tog LOK    &none &none &none 
                >;
            };


//              blank_layer {
//
// Layer Template
//
// ,----------------------------------.         ,----------------------------------.
// |      |      |      |      |      |         |      |      |      |      |      |
// |      |      |      |      |      |         |      |      |      |      |      |
// |------+------+------+------+------|         |------+------+------+------+------|
// |      |      |      |      |      |         |      |      |      |      |      |
// | GUI  | ALT  | SHFT | CTRL |      |         |      |      |      |      |      |
// |------+------+------+------+------|         |------+------+------+------+------|
// |      |      |      |      |      |         |      |      |      |      |      |
// |      |      |      |      |      |         |      |      |      |      |      |
// `-------------+------+------+------|         |------+------+------+-------------'
//               |      |      |      |         |      |      |      |
//               |      |      |      |         |      |      |      |
//               `--------------------'         `--------------------'
//
//                      bindings = <
//              &none &none &none &none &none    &none &none &none &none &none
//              &none &none &none &none &none    &none &none &none &none &none
//              &none &none &none &none &none    &none &none &none &none &none
//                          &none &none &none    &none &none &none 
//                      >;
//              };

        };
};
